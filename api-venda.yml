openapi: 3.0.0
info:
  title: Merchant's API to manage stock
  version: 1.0.0
  description: |
    ## Changelog
    * 2022-11-30
      - New type of keys will be handled by G2A API - images/scans as a file. Announcement will be send once whole functionality finished.
      - New endpoint to get file inventory [GET /order/:order_id/inventory/:id](#operation/getFileInventoryFromOrder).
      - Added new field ```stock.inventory[].kind``` to response for endpoints [POST /order](#operation/createOrder) and [GET /order/:order_id/inventory](#operation/getInventoryFromOrder)
    * 2022-10-06
      - Added new property ```offer_id``` for ```POST /notifications```
    * 2021-08-23
      - Added new response code ```HTTP 202``` for ```POST /order```
    * 2020-10-14
      - Added new property ```auction_base_price``` for [POST /reservation](#operation/createReservation)
    * 2020-09-16
      - New endpoint for notifications [POST /notifications](#operation/sendNotifications)
    * 2020-08-07
      - New endpoint to release reservation [DELETE /reservation/:reservation_id](#operation/releaseReservation)
    * 2020-04-25
      - Added new property ```unit_price``` for ``` POST /reservation```
    * 2019-06-05
      - New parameter ```g2a_order_id``` in ["Inventory" -> "Create order"](#operation/createOrder)
    * 2018-09-13
      - Changed keyword ```Keys``` to ```Inventory``` in method names
      - Type of ```product_id``` changed from ```string``` to ```int```
      - Field ```free_keys``` changed to ```inventory_size```
      - Field ```keys``` changed to ```inventory```
      - Field ```key``` changed to ```value```
      - Changed endpoint from ```/order/{order_id}/keys``` to ```/order/{order_id}/inventory```
      - Type of ```reservation_id``` changed from ```int``` to ```string```
      - Type of ```order_id``` changed from ```int``` to ```string```
    * 2018-09-11
      - Added state ```HTTP 409``` for ```POST /order```
      - Added state ```HTTP 410``` for ```POST /order```
servers:
  - url: https://yourapiurl.com
    description: Sandbox environment
paths:
  /reservation:
    post:
      tags:
        - Inventory
      summary: Reserve inventory for order
      operationId: createReservation
      description: Each reservation has expiration time. If it isn't confirmed at specified time then expire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  product_id:
                    type: integer
                    format: int64
                    minLength: 14
                    maxLength: 14
                    description: Product identifier
                  quantity:
                    type: integer
                    description: Number of items to order
                  additional_data:
                    type: object
                    properties:
                      unit_price:
                        $ref: '#/components/schemas/UnitPrice'
                      auction_base_price:
                        $ref: '#/components/schemas/AuctionBasePrice'
                required:
                  - product_id
                  - quantity
              example:
                - product_id: 10000068865001
                  quantity: 3
                  additional_data:
                    unit_price: "5.98"
                    auction_base_price: "15.98"
                - product_id: 10000068865002
                  quantity: 2
                  additional_data:
                    unit_price: "5.98"
                    auction_base_price: "15.98"
      responses:
        '200':
          $ref: '#/components/responses/ReservationCreated'
        '400':
          $ref: '#/components/responses/BadRequestExtended'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /reservation/{reservation_id}:
    parameters:
      - in: path
        name: reservation_id
        schema:
          type: string
          minLength: 1
          maxLength: 36
        required: true
        example: 3b121cfe-8e7e-4ec2-a189-1738a43cc5a1
        description: Reservation identifier (preferred uuid)
    put:
      tags:
        - Inventory
      summary: Renew reservation
      operationId: renewReservation
      description: Renewal of an outdated reservation
      responses:
        '200':
          $ref: '#/components/responses/ReservationCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Inventory
      summary: Release reservation
      operationId: releaseReservation
      description: Releases active reservation
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /order:
    post:
      tags:
        - Inventory
      summary: Create order
      operationId: createOrder
      description: Order can be created only based on reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_id:
                  type: string
                  minLength: 1
                  maxLength: 36
                  example: 2a121cfe-8e7e-4ec2-a189-1738a43cc5e6
                  description: Reservation identifier (preferred uuid)
                g2a_order_id:
                  type: integer
                  format: int64
                  minLength: 14
                  example: 80201000000192
                  description: Order identifier coming from G2A.COM
              required:
                - reservation_id
                - g2a_order_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                    minLength: 1
                    maxLength: 36
                    example: 2a121cfe-8e7e-4ec2-a189-1738a43cc5e6
                    description: Order identifier (preferred uuid)
                  stock:
                    $ref: '#/components/schemas/Inventory'
                required:
                  - order_id
                  - stock
        '202':
          $ref: '#/components/responses/OrderAccepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/OrderConflict'
        '410':
          $ref: '#/components/responses/ReservationExpired'
  /order/{order_id}/inventory:
    get:
      tags:
        - Inventory
      summary: Get inventory from order
      operationId: getInventoryFromOrder
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
            minLength: 1
            maxLength: 36
          required: true
          description: Order identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
              example:
                - product_id: 10000068865001
                  inventory_size: 177
                  inventory:
                    - id: 908e4567-e89b-12d3-a456-426655440000
                      value: XXX-XXX-YYY-111
                - product_id: 10000068865002
                  inventory_size: 23
                  inventory:
                    - id: 123e4567-e89b-12d3-a456-426655440000
                      value: XXX-XXX-YYY-111
                    - id: 124e4567-e89b-12d3-a456-426655440000
                      value: XXX-XXX-YYY-222
                      kind: file
                    - id: 125e4567-e89b-12d3-a456-426655440000
                      value: XXX-XXX-YYY-333
                      kind: text
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Inventory
      summary: Return inventory items to stock
      operationId: returnInventory
      description: In some cases items can be returned to stock
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
            minLength: 1
            maxLength: 36
          required: true
          description: Order identifier
        - in: query
          name: id
          description: |
            Array of inventory identifiers to return

            Example:
            `id[]=150e3a7b-05dc-4079-9eb3-c805a93a437b&id[]=8fef6eda-d8ac-47f3-b0d2-8d3ac15c42b1`
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 36
          required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /order/{order_id}/inventory/{id}:
    get:
      tags:
        - Inventory
      summary: Get file inventory from order
      description: Returns key in file type
      operationId: getFileInventoryFromOrder
      parameters:
        - in: path
          name: order_id
          schema:
            type: string
            minLength: 1
            maxLength: 36
          required: true
          description: Order identifier
        - in: path
          name: id
          schema:
            type: string
            minLength: 1
            maxLength: 36
          required: true
          description: Inventory identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInventory'
              example:
                data: ZXhhbXBsZQ==
                fileName: key.jpg
                mimeType: image/jpeg
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /notifications:
    post:
      tags:
        - Notifications
      summary: Send notifications
      operationId: sendNotifications
      description: Send notifications about events on marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  notification_type:
                    type: string
                    description: "Type of notification"
                    enum: [auction_deactivated]
                  date:
                    type: string
                    format: ISO8601
                    description: "Date when event was triggered."
                  data:
                    type: object
                    description: "Fields inside this object depends on the notification type"
                    properties:
                      message:
                        type: string
                        description: "Describes the reason for the notification"
                      auction_id:
                        type: integer
                        format: int64
                        minimum: 1
                        maximum: 9999999999
                        description: "Auction identifier"
                      offer_id:
                        type: string
                        format: uuid
                        minLength: 1
                        maxLength: 36
                        example: 2a121cfe-8e7e-4ec2-a189-1738a43cc5e6
                        description: "Offer identifier"
                    required:
                      - message
                      - auction_id
                      - offer_id
                required:
                  - notification_type
                  - date
                  - data
              example:
                - notification_type: "auction_deactivated"
                  date: "2017-07-21T17:32:28Z"
                  data:
                    message: "Some of the requested items do not exist"
                    auction_id: 12345
                    offer_id: 2a121cfe-2j37-16z6-1sy5-8a43cc5e6173
                - notification_type: "auction_deactivated"
                  date: "2017-07-21T17:32:28Z"
                  data:
                    message: "Price for reservation product is to low"
                    auction_id: 6666
                    offer_id: 2a121cfe-16cg-16dt6-1775-43cc5e61738a
                - notification_type: "auction_deactivated"
                  date: "2017-07-21T17:32:28Z"
                  data:
                    message: "G2A product not found"
                    auction_id: 99999
                    offer_id: 2cfea121-234g-1606-1ggf-2e65815cca43
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /healthcheck:
    get:
      tags:
        - Health check
      summary: Check API status
      operationId: checkStatus
      description: Frequently called endpoint to check API availability
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
  /oauth/token:
    get:
      tags:
        - Auth
      summary: Get token
      operationId: getToken
      description: Get API token to make requests
      parameters:
        - in: query
          name: grant_type
          schema:
            type: string
            example: client_credentials
          required: true
          description: Grant type
        - in: query
          name: client_id
          schema:
            type: string
            example: ff72ce315d1259e822f47d87d02d261e
          required: true
          description: Client identifier
        - in: query
          name: client_secret
          schema:
            type: string
            example: $2a$10$E2jVWDADFA5gh6zlRVcrlOOX01Q/HJoT6hXuDMJxek.YEo.lkO2T6
          required: true
          description: Client secret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
              example:
                access_token: 309de420-2a98-467e-93ec-d635ce41ee8b
                token_type: bearer
                expires_in: 9
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

security:
  - oAuth2:
      - read
      - write

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth/token
          scopes: {}
  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
      required:
        - access_token
        - token_type
        - expires_in

    OrderConflictSchema:
      type: object
      properties:
        order_id:
          type: string
          minLength: 1
          maxLength: 36

    Stock:
      type: array
      items:
        type: object
        properties:
          product_id:
            type: integer
            format: int64
            minLength: 14
            maxLength: 14
            description: Product identifier
          inventory_size:
            type: integer
            description: Number of items available in stock
        required:
          - product_id
          - inventory_size
      example:
        - product_id: 10000068865001
          inventory_size: 44
        - product_id: 10000068865002
          inventory_size: 150

    Inventory:
      type: array
      items:
        type: object
        properties:
          product_id:
            type: integer
            format: int64
            minLength: 14
            maxLength: 14
            description: Product identifier
          inventory_size:
            type: integer
            description: Number of items available in stock, excluding reserved
          inventory:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
                  maxLength: 36
                  description: Inventory item identifier (preferred uuid)
                value:
                  type: string
                  description: Inventory item value
                kind:
                  type: string
                  enum: [text,file]
                  default: text
                  description:
                    This field discriminates type of key.<br/> 
                    If you plan to deliver image keys you have to set this field a `file` and `value` field should be set to empty string.<br/>
                    Then we will fetch this file from another endpoint [GET /order/:order_id/inventory/:id](#operation/getFileInventoryFromOrder).
              required:
                - id
                - value
        required:
          - product_id
          - inventory_size
          - inventory
      example:
        - product_id: 10000068865001
          inventory_size: 234
          inventory:
            - id: 122e4567-e89b-12d3-a456-426655440000
              value: XXX-XXX-YYY-111
        - product_id: 10000068865002
          inventory_size: 23
          inventory:
            - id: 123e4567-e89b-12d3-a456-426655440000
              value: XXX-XXX-YYY-111
            - id: 124e4567-e89b-12d3-a456-426655440000
              value: XXX-XXX-YYY-222
              kind: file
            - id: 125e4567-e89b-12d3-a456-426655440000
              value: XXX-XXX-YYY-333
              kind: text

    FileInventory:
      type: object
      properties:
        data:
          type: string
          description: File encoded in Base64. Maximum size of file `200kB`
        fileName:
          type: string
          minLength: 5
          maxLength: 255
          pattern: ^[\p{L}\d_\-]([\p{L}\d\s_\-.]*[\p{L}\d\s_\-])?\.(pdf|png|jpg|jpeg|jfif|pjpeg|pjp)$
          description: Name of file
        mimeType:
          type: string
          enum: [image/jpeg, image/png, application/pdf]
          description: Content type of file
      required:
        - data
        - fileName
        - mimeType
      example:
        data: ZXhhbXBsZQ==
        fileName: key.jpg
        mimeType: image/jpeg

    UnitPrice:
      type: string
      pattern: ^[0-9]+(\\.[0-9]{0,4})?$
      description: Final price like on the product page
      example: "5.98"
      minimum: 0
      exclusiveMinimum: true

    AuctionBasePrice:
      type: string
      pattern: ^[0-9]+(\\.[0-9]{0,4})?$
      description: Auction price set by merchant in EUR
      example: "5.98"
      minimum: 0
      exclusiveMinimum: true

    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    ErrorExtended:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            stock:
              $ref: '#/components/schemas/Stock'
          required:
            - stock

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequestExtended:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorExtended'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OrderConflict:
      description: Order already exists for reservation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderConflictSchema'
    ReservationExpired:
      description: Reservation expired
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ReservationCreated:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              reservation_id:
                type: string
                minLength: 1
                maxLength: 36
                example: 2a121cfe-8e7e-4ec2-a189-1738a43cc5e6
                description: Reservation identifier (preferred uuid)
              stock:
                $ref: '#/components/schemas/Stock'
            required:
              - reservation_id
              - stock
    NoContent:
      description: No Content
    OrderAccepted:
      description: Order created without stock
      content:
        application/json:
          schema:
            type: object
            properties:
              order_id:
                type: string
                minLength: 1
                maxLength: 36
                example: 2a121cfe-8e7e-4ec2-a189-1738a43cc5e6
                description: Order identifier (preferred uuid)
              stock:
               type: array
               default: []
            required:
              - order_id
              - stock
